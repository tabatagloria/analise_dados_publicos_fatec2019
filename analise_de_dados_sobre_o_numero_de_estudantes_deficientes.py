# -*- coding: utf-8 -*-
"""analise de dados sobre o numero de estudantes deficientes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Dy-3cC3hBGBsaBviXbcpxgJDRO8JP8no
"""

from google.colab import drive

drive.mount('/content/gdrive')
os.chdir("/content/gdrive/My Drive/Colab Notebooks")

import pandas as pd
import matplotlib.pyplot as plt

data = pd.read_csv(r'DM_ALUNO.CSV', chunksize=1000000, delimiter='|', encoding='iso-8859-1', usecols=['ID_ALUNO','TP_SEXO','IN_DEFICIENCIA','NU_IDADE'])

male_tpsx   = []
female_tpsx = []

for d in data:
   male_tpsx.append(d.TP_SEXO.value_counts().values[1])
   female_tpsx.append(d.TP_SEXO.value_counts().values[0])

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline

bins = [0,10,20,30,40,50,60,70,80,90,100]

plt.hist(male_tpsx)
plt.hist(female_tpsx)
plt.title('Quantidade de estudantes deficientes')
plt.xlabel('Quantidade')
plt.ylabel('Nâo Possui deficiência')
plt.xticks()
plt.legend(["Homem", "Mulher"])
plt.show

male_def    = []
male_ndef   = []
male_nif    = []


for i in data:
    male_ndef.append(i.IN_DEFICIENCIA.value_counts().values[0])
    male_def.append(i.IN_DEFICIENCIA.value_counts().values[1])
    male_nif.append(i.IN_DEFICIENCIA.value_counts().values[2])

female_def  = []
female_ndef = []
female_nif  = []

for a in data:
    female_ndef.append(a.IN_DEFICIENCIA.value_counts().values[0])
    female_def.append(a.IN_DEFICIENCIA.value_counts().values[1])
    female_nif.append(a.IN_DEFICIENCIA.value_counts().values[2])

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline

bins = [0,10,20,30,40,50,60,70,80,90,100]

plt.hist(female_ndef)
plt.hist(female_def)
plt.hist(female_nif)
plt.title('Quantidade de estudantes deficientes')
plt.xlabel('Quantidade')
plt.ylabel('Nâo Possui deficiência')
plt.xticks()
plt.legend(["Não possui", "Possui", "Não informado"])
plt.show

plt.hist(male_ndef)
plt.hist(male_def)
plt.hist(male_nif)
plt.title('Quantidade de estudantes deficientes')
plt.xlabel('Quantidade')
plt.ylabel('Nâo Possui deficiência')
plt.xticks()
plt.legend(["Não possui", "Possui", "Não informado"])
plt.show